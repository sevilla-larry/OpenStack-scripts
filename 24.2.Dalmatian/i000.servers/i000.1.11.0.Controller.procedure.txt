A.  Preparation

    A.01. ( Assumming LfS is already running )

        ###

        rm -v /sources

        ###

        # (a) VM & VB

            mkdir -v /mnt/Src/blfs.{src,log}

            chmod -vR a+wt /mnt/Src/blfs.{src,log}

            ln -sfv /mnt/Src/blfs.src /sources

            ln -sfv /mnt/Src/blfs.log /var/log/blfs

        # (b) PC

            mkdir -pv /usr/src/blfs

            mkdir -pv /var/log/blfs

            chmod -vR a+wt /usr/src/blfs

            chmod -vR a+wt /var/log/blfs

            ln -sfv /usr/src/blfs /sources

        ###

        cd /sources

        ###

    A.02. Copy all script files

        copy all script files from the following to /sources

            1. i000.servers
            2. i010.support.minor
            3. i020.support.Major

            # BLfS
            4. b01.OpenStack.support
            5. b10.common.Xorg.and.servers
            6. c11.MariaDB


    A.03. Download packages

        ###

        wget --input-file=i010.1.wget-list.support.minor.txt                --continue --directory-prefix=/sources
        wget --input-file=i020.1.wget-list.support.Major.txt                --continue --directory-prefix=/sources

        wget --input-file=b01.01.wget-list-sysv.OpenStack.support.txt       --continue --directory-prefix=/sources
        wget --input-file=b10.01.wget-list-sysv.common.Xorg.and.servers.txt --continue --directory-prefix=/sources
        wget --input-file=c11.01.wget-list-sysv.MariaDB.txt                 --continue --directory-prefix=/sources

        # md5sum -c md5sums.txt
        md5sum -c b01.02.md5sums.OpenStack.support.txt
        md5sum -c b10.02.md5sums.common.Xorg.and.servers.txt
        md5sum -c c11.02.md5sums.MariaDB.txt
        md5sum -c c13.02.md5sums.Apache.txt

        ###

    A.04. Setting Up the Environment
        ( Note: change the MAKEFLAGS based on the number of threads )

        ###

        export LFSLOG=/var/log/blfs
        export MAKEFLAGS="-j$(nproc)"
        export NPROC="$(nproc)"

        #export LANG=C.UTF-8

        ###

    A.05. check /etc/hosts

        # 10.0.0.11   localhost.controller    controller

B.  Support Applications - minor

    B.01. Checking Environment

        ###

        echo $LFSLOG          # /var/log/blfs
        echo $MAKEFLAGS       # -j$(nproc)
        echo $NPROC           # $(nproc)
        echo $LANG            # C.UTF-8

        echo $SHELL           # /bin/bash
        ls -l /bin/sh         # bash
        ls -l /usr/bin/awk    # gawk

        cd /sources

        ###

        ( display )
        root [ /sources ]#

    B.03. Generate Applications - minor

        ###

        bash i000.1.11.1.support.apps.sh
        # includes Python OpenStack Client

        ###

C.  Support Applications - Major

        ###

        # MariaDB, Apache, RabbitMQ, MemCacheD, EtcD
        bash i000.1.11.2.support.apps.sh

        ###

D.  Support Apps - Major - Configuration 1

    D.01. MariaDB configuration

        ##### as root

        ### edit /etc/mysql/my.cnf, add:

        !includedir /etc/mysql/mariadb.conf.d/

        ### create mariadb.conf.d subdirectory

        mkdir /etc/mysql/mariadb.conf.d

        ### add/create file 99-openstack.cnf under /etc/mysql/mariadb.conf.d

        [mysqld]
        bind-address = 10.0.0.11

        default-storage-engine = innodb
        innodb_file_per_table = on
        max_connections = 4096
        collation-server = utf8_general_ci
        character-set-server = utf8

        ###

    D.02. Activate some modules & add mod_wsgi to Apache HTTPD

        ###

        # Copy the output of:
        mod_wsgi-express module-config

        # and Paste into:
        #
        # /etc/httpd/httpd.conf
        #

        ServerName controller

        ###
        # other Modules to be Loaded
        ###

        watchdog
        logio
        deflate
        negotiation

        # Modules to be UnLoaded

        authz_groupfile

        # apachectl -k restart

        ###

    D.03. BLfS bootscripts

        ###

        cd /mnt/Src/lfs.src/blfs-bootscripts-20240416       # VM/VB
        cd /usr/src/lfs/blfs-bootscripts-20240416           # PC

        ###

        make install-mysql      # MariaDB
        make install-httpd      # Apache
#        make install-iptables   # iptables

        reboot

        ###

E.  Support Apps - Major - Configuration 2

    E.01. MariaDB

        ###

        mysql_secure_installation

            current password                            <blank>
            Switch to unix_socket authentication        n
            set root password?                          Y
            New Password                                openstack
            Remove anonymous user?                      Y
            Disallow root login remotely?               n
            Remove test database and access to it?      Y
            Reload privilege tables now?                Y

        ###

    E.02. Check if mod_wsgi is included in Apache

        ###

        apachectl -t -D DUMP_MODULES       # check if wsgi is running

        ###

    E.03. RabbitMQ User Configurations
    
            ### as root

            pathprepend /usr/local/rabbitmq_server-4.0.3/sbin PATH

            #
            # FAILED
            #   su - rabbitmq -c 'rabbitmq-server -detached'
            #

            rabbitmq-server -detached 

            rabbitmqctl start_app

            #                    user      password
            rabbitmqctl add_user openstack openstack

            rabbitmqctl set_permissions openstack ".*" ".*" ".*"

            ###

F.  Support Apps - MemCacheD Testing

        ###

        echo "stats settings" | ncat 10.0.0.11 11211

        ###

G.  Check Port is Accepting msgs

    iptables -S

    nc -w5 -z -v 10.0.0.11 5000
    # should be "succeeded!"

    lsof -i:5000

    curl -i http://10.0.0.11:5000/v3

H.  KeyStone

    H.01. KeyStone database

        ###

        mysql
        # or # mariadb

        ### display:
        #
        # MariaDB [(none)]
        #

        CREATE DATABASE keystone;

      # GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost'    \
      #     IDENTIFIED BY 'KEYSTONE_DBPASS';
      # GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%'            \
      #     IDENTIFIED BY 'KEYSTONE_DBPASS';

        GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost'    \
            IDENTIFIED BY 'openstack';
        GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%'            \
            IDENTIFIED BY 'openstack';

        exit;

        #
        #
        # end MariaDB
        #
        ###

    H.02. KeyStone install

        ###

        install first/last bcrypt 4.0.1

        bash i151.9.1.KeyStone-26.0.0.sh

        ###

    H.03. KeyStone configuration

        ### edit /etc/keystone/keystone.conf

        [default]
        log_dir = /var/log/keystone

        [database]
      # connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone
        connection = mysql+pymysql://keystone:openstack@controller/keystone

        [token]
        provider = fernet

        ###

    H.04. Populate the Identity service database

        ###

        su -s /bin/sh -c "keystone-manage db_sync" keystone
    
        ###

    H.05. Initialize Fernet key repositories

        ###

        keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
        keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

        ###

    H.06. Bootstrap the Identity service

        ###

      # keystone-manage bootstrap --bootstrap-password ADMIN_PASS \
      #     --bootstrap-admin-url http://controller:5000/v3/ \
      #     --bootstrap-internal-url http://controller:5000/v3/ \
      #     --bootstrap-public-url http://controller:5000/v3/ \
      #     --bootstrap-region-id RegionOne
        keystone-manage bootstrap --bootstrap-password openstack \
            --bootstrap-admin-url http://controller:5000/v3/ \
            --bootstrap-internal-url http://controller:5000/v3/ \
            --bootstrap-public-url http://controller:5000/v3/ \
            --bootstrap-region-id RegionOne
        ###

I.  Configure the administrative account by setting the proper environmental variables

        ### as user

        export OS_USERNAME=admin
      # export OS_PASSWORD=ADMIN_PASS
        export OS_PASSWORD=openstack
        export OS_PROJECT_NAME=admin
        export OS_USER_DOMAIN_NAME=Default
        export OS_PROJECT_DOMAIN_NAME=Default
        export OS_AUTH_URL=http://controller:5000/v3
        export OS_IDENTITY_API_VERSION=3

        ###
