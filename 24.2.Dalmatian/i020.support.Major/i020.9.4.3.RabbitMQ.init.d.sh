#!/bin/sh
########################################################################
# Begin rabbitmq
#
# Description : RabbitMQ Server Control Script
#
###
### Generated by Grok 3
###     1. Upload first /lib/lsb/init-functions
###     2. from init.d, upload sysklogd, network, ntpd, sshd, httpd, mysql, gpm
###
### using the phrase:
###     https://github.com/rabbitmq/rabbitmq-server/releases/download/v4.0.3/rabbitmq-server-generic-unix-4.0.3.tar.xz
###     How can I install RabbitMQ (based on link)? include init scripts
###
#
# Author      : Grok 3
# Version     : Based on RabbitMQ 4.0.3
#
########################################################################

### BEGIN INIT INFO
# Provides:            rabbitmq
# Required-Start:      $network
# Should-Start:        $syslog
# Required-Stop:       $network
# Should-Stop:         $syslog
# Default-Start:       2 3 4 5
# Default-Stop:        0 1 6
# Short-Description:   Starts RabbitMQ server.
# Description:         Controls the RabbitMQ messaging server.
# X-LFS-Provided-By:   Custom
### END INIT INFO

. /lib/lsb/init-functions

# RABBITMQ_HOME=/usr/local/rabbitmq_server-4.0.3
# RABBITMQ_SBIN=$RABBITMQ_HOME/sbin
RABBITMQ_SBIN=/usr/local/sbin
PIDFILE=/var/run/rabbitmq.pid
export HOME=/var/lib/rabbitmq  # Enforce cookie location
export RABBITMQ_ERLANG_COOKIE="OPENSTACK"  # Optional: enforce specific cookie

case "$1" in
   start)
      log_info_msg "Starting RabbitMQ server..."
      start_daemon $RABBITMQ_SBIN/rabbitmq-server -detached
      sleep 5
      $RABBITMQ_SBIN/rabbitmqctl start_app
      sleep 5
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping RabbitMQ server..."
      $RABBITMQ_SBIN/rabbitmqctl shutdown
      evaluate_retval
      [ -f "$PIDFILE" ] && rm -f "$PIDFILE"
      ;;

   restart)
      $0 stop
      sleep 1
      $0 start
      ;;

   status)
      statusproc $RABBITMQ_SBIN/rabbitmq-server
      ;;

   *)
      echo "Usage: $0 {start|stop|restart|status}"
      exit 1
      ;;
esac

exit 0

# End rabbitmq





# #!/bin/sh
# # /etc/rc.d/init.d/rabbitmq
# # Startup script for RabbitMQ Server under SysV init

# ###
# ### Generated by Grok 3 using the phrase:
# ###   linux from scratch 12.2 sysv init
# ###   how to startup rabbitmq-server during boot time?
# ###

# # Source function library (if available, optional in LFS)
# #. /etc/rc.d/init.d/functions

# # RabbitMQ settings
# RABBITMQ_SERVER=/usr/local/sbin/rabbitmq-server
# RABBITMQ_CTL=/usr/local/sbin/rabbitmqctl
# RABBITMQ_PID_FILE=/var/run/rabbitmq.pid
# RABBITMQ_USER=rabbitmq  # User to run RabbitMQ (create this user if needed)

# start() {
#     echo -n "Starting RabbitMQ Server: "
#     if [ -f "$RABBITMQ_PID_FILE" ]; then
#         echo "RabbitMQ is already running."
#         return 1
#     fi
#     # FAILED
#     # su - $RABBITMQ_USER -c "$RABBITMQ_SERVER -detached"
#     $RABBITMQ_SERVER -detached
#     sleep 5
#     $RABBITMQ_CTL start_app
#     sleep 5  # Give it time to start
#     if $RABBITMQ_CTL status > /dev/null 2>&1; then
#         echo "OK"
#         return 0
#     else
#         echo "FAILED"
#         return 1
#     fi
# }

# stop() {
#     echo -n "Stopping RabbitMQ Server: "
#     $RABBITMQ_CTL stop
#     sleep 2  # Wait for shutdown
#     if [ ! -f "$RABBITMQ_PID_FILE" ]; then
#         echo "OK"
#         return 0
#     else
#         echo "FAILED"
#         return 1
#     fi
# }

# status() {
#     $RABBITMQ_CTL status
#     if [ $? -eq 0 ]; then
#         echo "RabbitMQ is running."
#         return 0
#     else
#         echo "RabbitMQ is stopped."
#         return 3
#     fi
# }

# case "$1" in
#     start)
#         start
#         ;;
#     stop)
#         stop
#         ;;
#     restart)
#         stop
#         sleep 2
#         start
#         ;;
#     status)
#         status
#         ;;
#     *)
#         echo "Usage: $0 {start|stop|restart|status}"
#         exit 1
#         ;;
# esac

# exit $?
