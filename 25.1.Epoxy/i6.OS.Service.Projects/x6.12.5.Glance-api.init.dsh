#!/bin/sh
# glance-api    OpenStack Glance API Service
# chkconfig:   345 95 05
# description: OpenStack Image Service API

. /lib/lsb/init-functions

program="/usr/bin/glance-api"
config="/etc/glance/glance-api.conf"
pidfile="/var/run/glance/glance-api.pid"
logfile="/var/log/glance/api.log"
user="glance"

# === ENSURE ENVIRONMENT ===
mkdir -p /var/run/glance /var/log/glance
chown $user:$user /var/run/glance /var/log/glance
chown $user:$user "$config" "$logfile" 2>/dev/null || true

# === DEBUG LOG ===
debug_log="/var/log/glance/startup-debug.log"
echo "=== $(date) ===" >> "$debug_log"

start() {
    log_info_msg "Starting Glance API..."

    # Check if already running
    if [ -f "$pidfile" ] && kill -0 $(cat "$pidfile") 2>/dev/null; then
        log_success_msg2
        return 0
    fi

    # Clean stale PID
    rm -f "$pidfile"

    # === RUN AS USER ===
    if ! command -v sudo >/dev/null 2>&1; then
        # Use su -l (login shell)
        su -l $user -c "\"$program\" --config-file=\"$config\" --log-file=\"$logfile\" & echo \$! > \"$pidfile\"" \
            >> "$debug_log" 2>&1
        retval=$?
    else
        # Use sudo
        sudo -u $user "$program" --config-file="$config" --log-file="$logfile" & \
            echo $! > "$pidfile"
        retval=$?
    fi

    # Wait and check
    sleep 2
    if [ -f "$pidfile" ] && kill -0 $(cat "$pidfile") 2>/dev/null; then
        log_success_msg2
        return 0
    else
        log_failure_msg2
        echo "FAILED: Process did not start. Check $debug_log and $logfile" >> /var/log/glance/error.log
        cat "$debug_log" | tail -20
        rm -f "$pidfile"
        return 1
    fi
}

stop() {
    log_info_msg "Stopping Glance API..."
    if [ -f "$pidfile" ]; then
        killproc -p "$pidfile" "$program" -TERM
        retval=$?
        rm -f "$pidfile"
        evaluate_retval
    else
        log_success_msg2
    fi
}

status() {
    statusproc -p "$pidfile" "$program"
}

case "$1" in
    start)   start ;;
    stop)    stop ;;
    restart) stop; sleep 2; start ;;
    status)  status ;;
    *)       echo "Usage: $0 {start|stop|restart|status}"; exit 2 ;;
esac

exit 0
