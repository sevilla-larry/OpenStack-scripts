#!/bin/sh

# Generated by Grok 2025/Oct/26

# /etc/rc.d/init.d/memcached - FINAL NO-HANG VERSION

. /lib/lsb/init-functions

NAME=memcached
DAEMON=/usr/bin/memcached
PIDFILE=/var/run/memcached/memcached.pid
USER=memcached

# ALL options on command line (memcached ignores -u in config)
CMD_OPTS="-l 10.0.0.11 -u $USER -m 64 -c 1024 -P $PIDFILE"

start() {
    log_info_msg "Starting $NAME ..."

    # Clean old state
    rm -f "$PIDFILE"
    mkdir -p /var/run/memcached
    chown $USER:$USER /var/run/memcached

    # Fork manually: start in background
    setsid $DAEMON $CMD_OPTS >/dev/null 2>&1 &
    PID=$!

    # Write PID immediately
    echo "$PID" > "$PIDFILE"
    chown $USER:$USER "$PIDFILE"

    # Wait up to 3 seconds for process to be alive
    local i=0
    while [ $i -lt 30 ]; do
        if kill -0 "$PID" 2>/dev/null; then
            log_success_msg2
            return 0
        fi
        sleep 0.1
        i=$((i+1))
    done

    log_failure_msg2
    rm -f "$PIDFILE"
    return 1
}

stop() {
    log_info_msg "Stopping $NAME ..."
    if [ -f "$PIDFILE" ]; then
        PID=$(cat "$PIDFILE")
        kill "$PID" 2>/dev/null
        local i=0
        while [ $i -lt 50 ] && kill -0 "$PID" 2>/dev/null; do
            sleep 0.1
            i=$((i+1))
        done
        kill -9 "$PID" 2>/dev/null
    fi
    rm -f "$PIDFILE"
    log_success_msg2
}

status() {
    if [ -f "$PIDFILE" ]; then
        PID=$(cat "$PIDFILE")
        if kill -0 "$PID" 2>/dev/null; then
            echo "$NAME is running with PID $PID"
            return 0
        fi
    fi
    echo "$NAME is not running"
    return 1
}

case "$1" in
    start)   start ;;
    stop)    stop  ;;
    restart) $0 stop; sleep 1; $0 start ;;
    status)  status ;;
    *) echo "Usage: $0 {start|stop|restart|status}"; exit 1 ;;
esac
